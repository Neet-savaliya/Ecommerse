{
    "sourceFile": "controllers/admin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1712239455072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1712239464420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+const {validatio}\n+\n+const Product = require(\"../models/product\");\n+\n+exports.getAddProduct = (req, res, next) => {\n+    res.render(\"admin/edit-product\", {\n+        pageTitle: \"Add Product\",\n+        path: \"/admin/add-product\",\n+        editing: false,\n+    });\n+};\n+\n+exports.postAddProduct = (req, res, next) => {\n+    const title = req.body.title;\n+    const imageUrl = req.body.imageUrl;\n+    const price = req.body.price;\n+    const description = req.body.description;\n+    const product = new Product({\n+        title: title,\n+        price: price,\n+        description: description,\n+        imageUrl: imageUrl,\n+        userId: req.user._id,\n+    });\n+    product\n+        .save()\n+        .then((result) => {\n+            // console.log(result);\n+            console.log(\"Created Product\");\n+            req.flash(\"success\", \"Product added successfully\");\n+            res.redirect(\"/admin/products\");\n+        })\n+        .catch((err) => {\n+            console.log(err);\n+        });\n+};\n+\n+exports.getEditProduct = (req, res, next) => {\n+    const editMode = req.query.edit;\n+    if (!editMode) {\n+        return res.redirect(\"/\");\n+    }\n+    const prodId = req.params.productId;\n+    Product.findById(prodId)\n+        .then((product) => {\n+            if (!product) {\n+                return res.redirect(\"/\");\n+            }\n+            res.render(\"admin/edit-product\", {\n+                pageTitle: \"Edit Product\",\n+                path: \"/admin/edit-product\",\n+                editing: editMode,\n+                product: product,\n+            });\n+        })\n+        .catch((err) => console.log(err));\n+};\n+\n+exports.postEditProduct = (req, res, next) => {\n+    const prodId = req.body.productId;\n+    const updatedTitle = req.body.title;\n+    const updatedPrice = req.body.price;\n+    const updatedImageUrl = req.body.imageUrl;\n+    const updatedDesc = req.body.description;\n+\n+    Product.findById(prodId)\n+        .then((product) => {\n+            if (product.userId.toString() === req.user._id.toString()) {\n+                product.title = updatedTitle;\n+                product.price = updatedPrice;\n+                product.description = updatedDesc;\n+                product.imageUrl = updatedImageUrl;\n+                return product.save();\n+            }\n+            return false;\n+        })\n+        .then((result) => {\n+            console.log(\"UPDATED PRODUCT!\");\n+            req.flash(\"success\", \"Product Edited successfully.\");\n+            res.redirect(\"/admin/products\");\n+        })\n+        .catch((err) => console.log(err));\n+};\n+\n+exports.getProducts = (req, res, next) => {\n+    let message = req.flash(\"success\");\n+    if (message.length > 0) {\n+        message = message[0];\n+    } else {\n+        message = null;\n+    }\n+    Product.find({ userId: req.user._id })\n+        .then((products) => {\n+            res.render(\"admin/products\", {\n+                prods: products,\n+                pageTitle: \"Admin Products\",\n+                path: \"/admin/products\",\n+                successMsg: message,\n+            });\n+        })\n+        .catch((err) => console.log(err));\n+};\n+\n+exports.postDeleteProduct = (req, res, next) => {\n+    const prodId = req.body.productId;\n+    Product.deleteOne({ _id: prodId, userId: req.user._id })\n+        .then(() => {\n+            console.log(\"DESTROYED PRODUCT\");\n+            req.flash(\"success\", \"Product Deleted successfully.\");\n+            res.redirect(\"/admin/products\");\n+        })\n+        .catch((err) => console.log(err));\n+};\n"
                },
                {
                    "date": 1712239474035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-const {validation}\n+const {validationResult} = require(\"\")\n \n const Product = require(\"../models/product\");\n \n exports.getAddProduct = (req, res, next) => {\n"
                },
                {
                    "date": 1712239479948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+const {validationResult} = require(\"express-validator\")\n+\n+const Product = require(\"../models/product\");\n+\n+exports.getAddProduct = (req, res, next) => {\n+    res.render(\"admin/edit-product\", {\n+        pageTitle: \"Add Product\",\n+        path: \"/admin/add-product\",\n+        editing: false,\n+    });\n+};\n+\n+exports.postAddProduct = (req, res, next) => {\n+    const title = req.body.title;\n+    const imageUrl = req.body.imageUrl;\n+    const price = req.body.price;\n+    const description = req.body.description;\n+    const product = new Product({\n+        title: title,\n+        price: price,\n+        description: description,\n+        imageUrl: imageUrl,\n+        userId: req.user._id,\n+    });\n+    product\n+        .save()\n+        .then((result) => {\n+            // console.log(result);\n+            console.log(\"Created Product\");\n+            req.flash(\"success\", \"Product added successfully\");\n+            res.redirect(\"/admin/products\");\n+        })\n+        .catch((err) => {\n+            console.log(err);\n+        });\n+};\n+\n+exports.getEditProduct = (req, res, next) => {\n+    const editMode = req.query.edit;\n+    if (!editMode) {\n+        return res.redirect(\"/\");\n+    }\n+    const prodId = req.params.productId;\n+    Product.findById(prodId)\n+        .then((product) => {\n+            if (!product) {\n+                return res.redirect(\"/\");\n+            }\n+            res.render(\"admin/edit-product\", {\n+                pageTitle: \"Edit Product\",\n+                path: \"/admin/edit-product\",\n+                editing: editMode,\n+                product: product,\n+            });\n+        })\n+        .catch((err) => console.log(err));\n+};\n+\n+exports.postEditProduct = (req, res, next) => {\n+    const prodId = req.body.productId;\n+    const updatedTitle = req.body.title;\n+    const updatedPrice = req.body.price;\n+    const updatedImageUrl = req.body.imageUrl;\n+    const updatedDesc = req.body.description;\n+\n+    Product.findById(prodId)\n+        .then((product) => {\n+            if (product.userId.toString() === req.user._id.toString()) {\n+                product.title = updatedTitle;\n+                product.price = updatedPrice;\n+                product.description = updatedDesc;\n+                product.imageUrl = updatedImageUrl;\n+                return product.save();\n+            }\n+            return false;\n+        })\n+        .then((result) => {\n+            console.log(\"UPDATED PRODUCT!\");\n+            req.flash(\"success\", \"Product Edited successfully.\");\n+            res.redirect(\"/admin/products\");\n+        })\n+        .catch((err) => console.log(err));\n+};\n+\n+exports.getProducts = (req, res, next) => {\n+    let message = req.flash(\"success\");\n+    if (message.length > 0) {\n+        message = message[0];\n+    } else {\n+        message = null;\n+    }\n+    Product.find({ userId: req.user._id })\n+        .then((products) => {\n+            res.render(\"admin/products\", {\n+                prods: products,\n+                pageTitle: \"Admin Products\",\n+                path: \"/admin/products\",\n+                successMsg: message,\n+            });\n+        })\n+        .catch((err) => console.log(err));\n+};\n+\n+exports.postDeleteProduct = (req, res, next) => {\n+    const prodId = req.body.productId;\n+    Product.deleteOne({ _id: prodId, userId: req.user._id })\n+        .then(() => {\n+            console.log(\"DESTROYED PRODUCT\");\n+            req.flash(\"success\", \"Product Deleted successfully.\");\n+            res.redirect(\"/admin/products\");\n+        })\n+        .catch((err) => console.log(err));\n+};\n"
                }
            ],
            "date": 1712239455072,
            "name": "Commit-0",
            "content": "\n\nconst Product = require(\"../models/product\");\n\nexports.getAddProduct = (req, res, next) => {\n    res.render(\"admin/edit-product\", {\n        pageTitle: \"Add Product\",\n        path: \"/admin/add-product\",\n        editing: false,\n    });\n};\n\nexports.postAddProduct = (req, res, next) => {\n    const title = req.body.title;\n    const imageUrl = req.body.imageUrl;\n    const price = req.body.price;\n    const description = req.body.description;\n    const product = new Product({\n        title: title,\n        price: price,\n        description: description,\n        imageUrl: imageUrl,\n        userId: req.user._id,\n    });\n    product\n        .save()\n        .then((result) => {\n            // console.log(result);\n            console.log(\"Created Product\");\n            req.flash(\"success\", \"Product added successfully\");\n            res.redirect(\"/admin/products\");\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n};\n\nexports.getEditProduct = (req, res, next) => {\n    const editMode = req.query.edit;\n    if (!editMode) {\n        return res.redirect(\"/\");\n    }\n    const prodId = req.params.productId;\n    Product.findById(prodId)\n        .then((product) => {\n            if (!product) {\n                return res.redirect(\"/\");\n            }\n            res.render(\"admin/edit-product\", {\n                pageTitle: \"Edit Product\",\n                path: \"/admin/edit-product\",\n                editing: editMode,\n                product: product,\n            });\n        })\n        .catch((err) => console.log(err));\n};\n\nexports.postEditProduct = (req, res, next) => {\n    const prodId = req.body.productId;\n    const updatedTitle = req.body.title;\n    const updatedPrice = req.body.price;\n    const updatedImageUrl = req.body.imageUrl;\n    const updatedDesc = req.body.description;\n\n    Product.findById(prodId)\n        .then((product) => {\n            if (product.userId.toString() === req.user._id.toString()) {\n                product.title = updatedTitle;\n                product.price = updatedPrice;\n                product.description = updatedDesc;\n                product.imageUrl = updatedImageUrl;\n                return product.save();\n            }\n            return false;\n        })\n        .then((result) => {\n            console.log(\"UPDATED PRODUCT!\");\n            req.flash(\"success\", \"Product Edited successfully.\");\n            res.redirect(\"/admin/products\");\n        })\n        .catch((err) => console.log(err));\n};\n\nexports.getProducts = (req, res, next) => {\n    let message = req.flash(\"success\");\n    if (message.length > 0) {\n        message = message[0];\n    } else {\n        message = null;\n    }\n    Product.find({ userId: req.user._id })\n        .then((products) => {\n            res.render(\"admin/products\", {\n                prods: products,\n                pageTitle: \"Admin Products\",\n                path: \"/admin/products\",\n                successMsg: message,\n            });\n        })\n        .catch((err) => console.log(err));\n};\n\nexports.postDeleteProduct = (req, res, next) => {\n    const prodId = req.body.productId;\n    Product.deleteOne({ _id: prodId, userId: req.user._id })\n        .then(() => {\n            console.log(\"DESTROYED PRODUCT\");\n            req.flash(\"success\", \"Product Deleted successfully.\");\n            res.redirect(\"/admin/products\");\n        })\n        .catch((err) => console.log(err));\n};\n"
        }
    ]
}