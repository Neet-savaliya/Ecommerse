{
    "sourceFile": "app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 23,
            "patches": [
                {
                    "date": 1712321078685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1712321093020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\")\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+    // \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash())\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if(!user){\n+                return \n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => console.log(err));\n+});\n+\n+app.use((req, res, next) => {\n+  res.locals.isAuthenticated = req.session.isLoggedIn\n+  res.locals.csrfToken = req.csrfToken()\n+  next()\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.use(errorController.get404);\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712321104614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\")\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+    // \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash())\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if(!user){\n+                return next()\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => console.log(err));\n+});\n+\n+app.use((req, res, next) => {\n+  res.locals.isAuthenticated = req.session.isLoggedIn\n+  res.locals.csrfToken = req.csrfToken()\n+  next()\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.use(errorController.get404);\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712321211724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\")\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+    // \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash())\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if(!user){\n+                return next()\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => );\n+});\n+\n+app.use((req, res, next) => {\n+  res.locals.isAuthenticated = req.session.isLoggedIn\n+  res.locals.csrfToken = req.csrfToken()\n+  next()\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.use(errorController.get404);\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712321218050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\")\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+    // \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash())\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if(!user){\n+                return next()\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => throw n);\n+});\n+\n+app.use((req, res, next) => {\n+  res.locals.isAuthenticated = req.session.isLoggedIn\n+  res.locals.csrfToken = req.csrfToken()\n+  next()\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.use(errorController.get404);\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712321238695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\")\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+    // \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash())\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if(!user){\n+                return next()\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {throw new Error});\n+});\n+\n+app.use((req, res, next) => {\n+  res.locals.isAuthenticated = req.session.isLoggedIn\n+  res.locals.csrfToken = req.csrfToken()\n+  next()\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.use(errorController.get404);\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712321243990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n             }\n             req.user = user;\n             next();\n         })\n-        .catch((err) => {throw new Error});\n+        .catch((err) => {throw new Error(err)});\n });\n \n app.use((req, res, next) => {\n   res.locals.isAuthenticated = req.session.isLoggedIn\n@@ -75,392 +75,4 @@\n     })\n     .catch((err) => {\n         console.log(err);\n     });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\")\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-    // \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash())\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if(!user){\n-                return next()\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => throw n);\n-});\n-\n-app.use((req, res, next) => {\n-  res.locals.isAuthenticated = req.session.isLoggedIn\n-  res.locals.csrfToken = req.csrfToken()\n-  next()\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.use(errorController.get404);\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\")\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-    // \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash())\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if(!user){\n-                return next()\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => );\n-});\n-\n-app.use((req, res, next) => {\n-  res.locals.isAuthenticated = req.session.isLoggedIn\n-  res.locals.csrfToken = req.csrfToken()\n-  next()\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.use(errorController.get404);\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\")\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-    // \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash())\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if(!user){\n-                return next()\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => console.log(err));\n-});\n-\n-app.use((req, res, next) => {\n-  res.locals.isAuthenticated = req.session.isLoggedIn\n-  res.locals.csrfToken = req.csrfToken()\n-  next()\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.use(errorController.get404);\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\")\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-    // \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash())\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if(!user){\n-                return \n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => console.log(err));\n-});\n-\n-app.use((req, res, next) => {\n-  res.locals.isAuthenticated = req.session.isLoggedIn\n-  res.locals.csrfToken = req.csrfToken()\n-  next()\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.use(errorController.get404);\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\")\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-    // \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash())\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if()\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => console.log(err));\n-});\n-\n-app.use((req, res, next) => {\n-  res.locals.isAuthenticated = req.session.isLoggedIn\n-  res.locals.csrfToken = req.csrfToken()\n-  next()\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.use(errorController.get404);\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n"
                },
                {
                    "date": 1712334170775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,16 +4,16 @@\n const mongoose = require(\"mongoose\");\n const session = require(\"express-session\");\n const MongoDBStore = require(\"connect-mongodb-session\")(session);\n const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\")\n+const flash = require(\"connect-flash\");\n \n const errorController = require(\"./controllers/error\");\n const User = require(\"./models/user\");\n \n const MONGODB_URI =\n     \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-    // \"mongodb://localhost:27017/shop\"\n+// \"mongodb://localhost:27017/shop\"\n \n const app = express();\n const store = new MongoDBStore({\n     uri: MONGODB_URI,\n@@ -38,35 +38,38 @@\n         store: store,\n     })\n );\n app.use(csrfProtection);\n-app.use(flash())\n+app.use(flash());\n \n app.use((req, res, next) => {\n     if (!req.session.user) {\n         return next();\n     }\n     User.findById(req.session.user._id)\n         .then((user) => {\n-            if(!user){\n-                return next()\n+            if (!user) {\n+                return next();\n             }\n             req.user = user;\n             next();\n         })\n-        .catch((err) => {throw new Error(err)});\n+        .catch((err) => {\n+            throw new Error(err);\n+        });\n });\n \n app.use((req, res, next) => {\n-  res.locals.isAuthenticated = req.session.isLoggedIn\n-  res.locals.csrfToken = req.csrfToken()\n-  next()\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n });\n \n app.use(\"/admin\", adminRoutes);\n app.use(shopRoutes);\n app.use(authRoutes);\n \n+\n app.use(errorController.get404);\n \n mongoose\n     .connect(MONGODB_URI)\n"
                },
                {
                    "date": 1712334176791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n app.use(\"/admin\", adminRoutes);\n app.use(shopRoutes);\n app.use(authRoutes);\n \n-\n+app.get(\"/\")\n app.use(errorController.get404);\n \n mongoose\n     .connect(MONGODB_URI)\n"
                },
                {
                    "date": 1712334184763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            throw new Error(err);\n+        });\n+});\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", error)\n+app.use(errorController.get404);\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712334635870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            throw new Error(err);\n+        });\n+});\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500)\n+app.use(errorController.get404);\n+\n+\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712334659335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            throw new Error(err);\n+        });\n+});\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500)\n+app.use(errorController.get404);\n+\n+app.\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712334666057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            throw new Error(err);\n+        });\n+});\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500)\n+app.use(errorController.get404);\n+\n+app.use(error)\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712334673905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            throw new Error(err);\n+        });\n+});\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500)\n+app.use(errorController.get404);\n+\n+app.use(error , req ,res ,next)\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712334681248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n \n app.get(\"/500\", errorController.get500)\n app.use(errorController.get404);\n \n-app.use(error , req ,res ,next)\n+app.use(error, req, res, )\n \n mongoose\n     .connect(MONGODB_URI)\n     .then((result) => {\n"
                },
                {
                    "date": 1712334691903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            throw new Error(err);\n+        });\n+});\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500)\n+app.use(errorController.get404);\n+\n+app.use((error, req, res, next))\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712334697135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            throw new Error(err);\n+        });\n+});\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500)\n+app.use(errorController.get404);\n+\n+app.use((error, req, res, next) => {\n+    re\n+})\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712334703196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            throw new Error(err);\n+        });\n+});\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500)\n+app.use(errorController.get404);\n+\n+app.use((error, req, res, next) => {\n+    res.redirect()\n+})\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712336960101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            throw new Error(err);\n+        });\n+});\n+\n+\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500)\n+app.use(errorController.get404);\n+\n+app.use((error, req, res, next) => {\n+    res.redirect(\"/500\")\n+})\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712336966690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            throw new Error(err);\n+        });\n+});\n+\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500)\n+app.use(errorController.get404);\n+\n+app.use((error, req, res, next) => {\n+    res.redirect(\"/500\")\n+})\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712336982137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n             req.user = user;\n             next();\n         })\n         .catch((err) => {\n-            throw new Error(err);\n+            (throw new Error(err);)\n         });\n });\n \n \n@@ -83,832 +83,4 @@\n     })\n     .catch((err) => {\n         console.log(err);\n     });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\");\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-// \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash());\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if (!user) {\n-                return next();\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => {\n-            throw new Error(err);\n-        });\n-});\n-\n-\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.get(\"/500\", errorController.get500)\n-app.use(errorController.get404);\n-\n-app.use((error, req, res, next) => {\n-    res.redirect(\"/500\")\n-})\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\");\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-// \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash());\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if (!user) {\n-                return next();\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => {\n-            throw new Error(err);\n-        });\n-});\n-\n-app.use((req, res, next) => {\n-    res.locals.isAuthenticated = req.session.isLoggedIn;\n-    res.locals.csrfToken = req.csrfToken();\n-    next();\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.get(\"/500\", errorController.get500)\n-app.use(errorController.get404);\n-\n-app.use((error, req, res, next) => {\n-    res.redirect()\n-})\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\");\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-// \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash());\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if (!user) {\n-                return next();\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => {\n-            throw new Error(err);\n-        });\n-});\n-\n-app.use((req, res, next) => {\n-    res.locals.isAuthenticated = req.session.isLoggedIn;\n-    res.locals.csrfToken = req.csrfToken();\n-    next();\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.get(\"/500\", errorController.get500)\n-app.use(errorController.get404);\n-\n-app.use((error, req, res, next) => {\n-    re\n-})\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\");\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-// \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash());\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if (!user) {\n-                return next();\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => {\n-            throw new Error(err);\n-        });\n-});\n-\n-app.use((req, res, next) => {\n-    res.locals.isAuthenticated = req.session.isLoggedIn;\n-    res.locals.csrfToken = req.csrfToken();\n-    next();\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.get(\"/500\", errorController.get500)\n-app.use(errorController.get404);\n-\n-app.use((error, req, res, next))\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\");\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-// \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash());\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if (!user) {\n-                return next();\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => {\n-            throw new Error(err);\n-        });\n-});\n-\n-app.use((req, res, next) => {\n-    res.locals.isAuthenticated = req.session.isLoggedIn;\n-    res.locals.csrfToken = req.csrfToken();\n-    next();\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.get(\"/500\", errorController.get500)\n-app.use(errorController.get404);\n-\n-app.use(error, req, res, )\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\");\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-// \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash());\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if (!user) {\n-                return next();\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => {\n-            throw new Error(err);\n-        });\n-});\n-\n-app.use((req, res, next) => {\n-    res.locals.isAuthenticated = req.session.isLoggedIn;\n-    res.locals.csrfToken = req.csrfToken();\n-    next();\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.get(\"/500\", errorController.get500)\n-app.use(errorController.get404);\n-\n-app.use(error)\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\");\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-// \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash());\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if (!user) {\n-                return next();\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => {\n-            throw new Error(err);\n-        });\n-});\n-\n-app.use((req, res, next) => {\n-    res.locals.isAuthenticated = req.session.isLoggedIn;\n-    res.locals.csrfToken = req.csrfToken();\n-    next();\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.get(\"/500\", errorController.get500)\n-app.use(errorController.get404);\n-\n-app.\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\");\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-// \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash());\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if (!user) {\n-                return next();\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => {\n-            throw new Error(err);\n-        });\n-});\n-\n-app.use((req, res, next) => {\n-    res.locals.isAuthenticated = req.session.isLoggedIn;\n-    res.locals.csrfToken = req.csrfToken();\n-    next();\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.get(\"/500\", errorController.get500)\n-app.use(errorController.get404);\n-\n-\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\");\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-// \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash());\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if (!user) {\n-                return next();\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => {\n-            throw new Error(err);\n-        });\n-});\n-\n-app.use((req, res, next) => {\n-    res.locals.isAuthenticated = req.session.isLoggedIn;\n-    res.locals.csrfToken = req.csrfToken();\n-    next();\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.get(\"/500\", error)\n-app.use(errorController.get404);\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n-const path = require(\"path\");\n-const express = require(\"express\");\n-const bodyParser = require(\"body-parser\");\n-const mongoose = require(\"mongoose\");\n-const session = require(\"express-session\");\n-const MongoDBStore = require(\"connect-mongodb-session\")(session);\n-const csrf = require(\"csurf\");\n-const flash = require(\"connect-flash\");\n-\n-const errorController = require(\"./controllers/error\");\n-const User = require(\"./models/user\");\n-\n-const MONGODB_URI =\n-    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n-// \"mongodb://localhost:27017/shop\"\n-\n-const app = express();\n-const store = new MongoDBStore({\n-    uri: MONGODB_URI,\n-    collection: \"sessions\",\n-});\n-const csrfProtection = csrf();\n-\n-app.set(\"view engine\", \"ejs\");\n-app.set(\"views\", \"views\");\n-\n-const adminRoutes = require(\"./routes/admin\");\n-const shopRoutes = require(\"./routes/shop\");\n-const authRoutes = require(\"./routes/auth\");\n-\n-app.use(bodyParser.urlencoded({ extended: false }));\n-app.use(express.static(path.join(__dirname, \"public\")));\n-app.use(\n-    session({\n-        secret: \"my secret\",\n-        resave: false,\n-        saveUninitialized: false,\n-        store: store,\n-    })\n-);\n-app.use(csrfProtection);\n-app.use(flash());\n-\n-app.use((req, res, next) => {\n-    if (!req.session.user) {\n-        return next();\n-    }\n-    User.findById(req.session.user._id)\n-        .then((user) => {\n-            if (!user) {\n-                return next();\n-            }\n-            req.user = user;\n-            next();\n-        })\n-        .catch((err) => {\n-            throw new Error(err);\n-        });\n-});\n-\n-app.use((req, res, next) => {\n-    res.locals.isAuthenticated = req.session.isLoggedIn;\n-    res.locals.csrfToken = req.csrfToken();\n-    next();\n-});\n-\n-app.use(\"/admin\", adminRoutes);\n-app.use(shopRoutes);\n-app.use(authRoutes);\n-\n-app.get(\"/\")\n-app.use(errorController.get404);\n-\n-mongoose\n-    .connect(MONGODB_URI)\n-    .then((result) => {\n-        app.listen(3000);\n-    })\n-    .catch((err) => {\n-        console.log(err);\n-    });\n"
                },
                {
                    "date": 1712336988571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            next(throw new Error(err))\n+        });\n+});\n+\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500)\n+app.use(errorController.get404);\n+\n+app.use((error, req, res, next) => {\n+    res.redirect(\"/500\")\n+})\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712336994079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            next( nw Error(err))\n+        });\n+});\n+\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500)\n+app.use(errorController.get404);\n+\n+app.use((error, req, res, next) => {\n+    res.redirect(\"/500\")\n+})\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                },
                {
                    "date": 1712337000143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+const path = require(\"path\");\n+const express = require(\"express\");\n+const bodyParser = require(\"body-parser\");\n+const mongoose = require(\"mongoose\");\n+const session = require(\"express-session\");\n+const MongoDBStore = require(\"connect-mongodb-session\")(session);\n+const csrf = require(\"csurf\");\n+const flash = require(\"connect-flash\");\n+\n+const errorController = require(\"./controllers/error\");\n+const User = require(\"./models/user\");\n+\n+const MONGODB_URI =\n+    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n+// \"mongodb://localhost:27017/shop\"\n+\n+const app = express();\n+const store = new MongoDBStore({\n+    uri: MONGODB_URI,\n+    collection: \"sessions\",\n+});\n+const csrfProtection = csrf();\n+\n+app.set(\"view engine\", \"ejs\");\n+app.set(\"views\", \"views\");\n+\n+const adminRoutes = require(\"./routes/admin\");\n+const shopRoutes = require(\"./routes/shop\");\n+const authRoutes = require(\"./routes/auth\");\n+\n+app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.static(path.join(__dirname, \"public\")));\n+app.use(\n+    session({\n+        secret: \"my secret\",\n+        resave: false,\n+        saveUninitialized: false,\n+        store: store,\n+    })\n+);\n+app.use(csrfProtection);\n+app.use(flash());\n+\n+app.use((req, res, next) => {\n+    res.locals.isAuthenticated = req.session.isLoggedIn;\n+    res.locals.csrfToken = req.csrfToken();\n+    next();\n+});\n+\n+app.use((req, res, next) => {\n+    if (!req.session.user) {\n+        return next();\n+    }\n+    User.findById(req.session.user._id)\n+        .then((user) => {\n+            if (!user) {\n+                return next();\n+            }\n+            req.user = user;\n+            next();\n+        })\n+        .catch((err) => {\n+            next(new Error(err));\n+        });\n+});\n+\n+app.use(\"/admin\", adminRoutes);\n+app.use(shopRoutes);\n+app.use(authRoutes);\n+\n+app.get(\"/500\", errorController.get500);\n+app.use(errorController.get404);\n+\n+app.use((error, req, res, next) => {\n+    res.redirect(\"/500\");\n+});\n+\n+mongoose\n+    .connect(MONGODB_URI)\n+    .then((result) => {\n+        app.listen(3000);\n+    })\n+    .catch((err) => {\n+        console.log(err);\n+    });\n"
                }
            ],
            "date": 1712321078685,
            "name": "Commit-0",
            "content": "const path = require(\"path\");\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst mongoose = require(\"mongoose\");\nconst session = require(\"express-session\");\nconst MongoDBStore = require(\"connect-mongodb-session\")(session);\nconst csrf = require(\"csurf\");\nconst flash = require(\"connect-flash\")\n\nconst errorController = require(\"./controllers/error\");\nconst User = require(\"./models/user\");\n\nconst MONGODB_URI =\n    \"mongodb+srv://node_complete:2801@cluster0.5zm0eog.mongodb.net/shop\";\n    // \"mongodb://localhost:27017/shop\"\n\nconst app = express();\nconst store = new MongoDBStore({\n    uri: MONGODB_URI,\n    collection: \"sessions\",\n});\nconst csrfProtection = csrf();\n\napp.set(\"view engine\", \"ejs\");\napp.set(\"views\", \"views\");\n\nconst adminRoutes = require(\"./routes/admin\");\nconst shopRoutes = require(\"./routes/shop\");\nconst authRoutes = require(\"./routes/auth\");\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(express.static(path.join(__dirname, \"public\")));\napp.use(\n    session({\n        secret: \"my secret\",\n        resave: false,\n        saveUninitialized: false,\n        store: store,\n    })\n);\napp.use(csrfProtection);\napp.use(flash())\n\napp.use((req, res, next) => {\n    if (!req.session.user) {\n        return next();\n    }\n    User.findById(req.session.user._id)\n        .then((user) => {\n            if()\n            req.user = user;\n            next();\n        })\n        .catch((err) => console.log(err));\n});\n\napp.use((req, res, next) => {\n  res.locals.isAuthenticated = req.session.isLoggedIn\n  res.locals.csrfToken = req.csrfToken()\n  next()\n});\n\napp.use(\"/admin\", adminRoutes);\napp.use(shopRoutes);\napp.use(authRoutes);\n\napp.use(errorController.get404);\n\nmongoose\n    .connect(MONGODB_URI)\n    .then((result) => {\n        app.listen(3000);\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n"
        }
    ]
}